#!/bin/sh
set -e

if [ -z "${VIRTUAL_HOST}" ]; then
    echo "ERROR: "
    echo "Per favore specifica il nome del host che conterr√† ePAS, es. epas.tools.iit.cnr.it attraverso il parametro VIRTUAL_HOST."
    exit 1
fi

PROTOCOL=${PROTOCOL:-http}
EPAS_SHIB_LOGIN=${EPAS_SHIB_LOGIN:-false}

# use default port number if it is still not set
case "${PROTOCOL}" in
  "http"|"https")  echo "ePas Protocol set to ${PROTOCOL}" ;;
  *)
    echo "ERROR: "
    echo "  Please specify the database http/https protocol via the PROTOCOL configuration option."
    echo "  Accepted values are \"http\" or \"https\". Aborting..."
    exit 1
    ;;
esac

DB_HOST=${DB_HOST:-postgres}
DB_PORT=${DB_PORT:-5432}
DB_NAME=${DB_NAME:-epas}
DB_USER=${DB_USER:-postgres}

EVOLUTIONS_ENABLED=${EVOLUTIONS_ENABLED:-true}

if [ -z "${DB_PASS}" ]; then
	DB_USER_PASS=$DB_USER
else
	DB_USER_PASS="$DB_USER:$DB_PASS"
fi

######## LOGS Settings #########

LOG_LEVEL=${LOG_LEVEL:-INFO}
APPENDERS=${APPENDERS:-"stdout, stderr"}
GRAYLOG_HOST=${GRAYLOG_HOST}
GRAYLOG_PORT=${GRAYLOG_PORT:-3514}
GRAYLOG_ORIGIN_HOST=${GRAYLOG_ORIGIN_HOST:-$VIRTUAL_HOST}

cp ${APP_HOME}/docker_conf/log4j.prod.properties ${APP_HOME}/conf/
sed 's#{{LOG_LEVEL}}#'"${LOG_LEVEL}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{APPENDERS}}#'"${APPENDERS}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_HOST}}#'"${GRAYLOG_HOST}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_PORT}}#'"${GRAYLOG_PORT}"'#' -i ${APP_HOME}/conf/log4j.prod.properties
sed 's#{{GRAYLOG_ORIGIN_HOST}}#'"${GRAYLOG_ORIGIN_HOST}"'#' -i ${APP_HOME}/conf/log4j.prod.properties

# Backup db
cp ${APP_HOME}/docker_conf/backupdb.sh ${APP_HOME}/tools/backupdb.sh

sed 's#{{DB_HOST}}#'"${DB_HOST}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_PORT}}#'"${DB_PORT}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_NAME}}#'"${DB_NAME}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{DB_USER_PASS}}#'"${DB_USER_PASS}"'#' -i ${APP_HOME}/tools/backupdb.sh
sed 's#{{EPAS_HOST}}#'"${VIRTUAL_HOST}"'#g' -i ${APP_HOME}/tools/backupdb.sh

chmod +x ${APP_HOME}/tools/backupdb.sh

if [ -z "${BACKUP_CRON}" ]; then
  echo "Backup del database non attivo."
else
  cp ${APP_HOME}/docker_conf/cron ${APP_HOME}/tools/cron
  sed 's#{{BACKUP_CRON}}#'"${BACKUP_CRON}"'#' -i ${APP_HOME}/tools/cron
  crontab ${APP_HOME}/tools/cron
  cron
  echo "Backup del database attivato: ${BACKUP_CRON}."
fi

# configure ePAS
SKIP_IP_CHECK=${SKIP_IP_CHECK:-false}
FLOWS_ACTIVE=${FLOWS_ACTIVE:-false}

cp ${APP_HOME}/docker_conf/prod.conf ${APP_HOME}/conf/

EPAS_APPLICATION_BASEURL="${PROTOCOL}:\/\/${VIRTUAL_HOST}"

# default HTTP_PATH = /
# Use this if you don't host your Play application at the root of the domain
# you're serving it from.
if [ -z ${HTTP_PATH} ]
then
  EPAS_APPLICATION_BASEURL="${PROTOCOL}:\/\/${VIRTUAL_HOST}"
  sed -n '/HTTP_PATH/!p' -i ${APP_HOME}/conf/prod.conf
else
  EPAS_APPLICATION_BASEURL="${PROTOCOL}:\/\/${VIRTUAL_HOST}${HTTP_PATH}"
  sed 's#{{HTTP_PATH}}#'"${HTTP_PATH}"'#' -i ${APP_HOME}/conf/prod.conf
  echo "HTTP_PATH presente: ${HTTP_PATH}"
fi

sed 's#{{EPAS_APPLICATION_BASEURL}}#'"${EPAS_APPLICATION_BASEURL}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_HOST}}#'"${DB_HOST}"'#' -i ${APP_HOME}/conf/prod.conf

sed 's#{{DB_PORT}}#'"${DB_PORT}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_NAME}}#'"${DB_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{DB_USER_PASS}}#'"${DB_USER_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{PROTOCOL}}#'"${PROTOCOL}"'#' -i ${APP_HOME}/conf/prod.conf

sed 's#{{EVOLUTIONS_ENABLED}}#'"${EVOLUTIONS_ENABLED}"'#' -i ${APP_HOME}/conf/prod.conf

### Creazione e configurazione dell'application secret
APPLICATION_SECRET=${APPLICATION_SECRET}
if [ -z "${APPLICATION_SECRET}" ]; then
  sed -n '/APPLICATION_SECRET/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{APPLICATION_SECRET}}#'"${APPLICATION_SECRET}"'#' -i ${APP_HOME}/conf/prod.conf
fi

### Impostazione server smtp

SMTP_FROM=${SMTP_FROM:-epas@cnr.it}
SMTP_HOST=${SMTP_HOST:-smtp.cnr.it}

sed 's#{{SMTP_FROM}}#'"${SMTP_FROM}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{SMTP_HOST}}#'"${SMTP_HOST}"'#' -i ${APP_HOME}/conf/prod.conf

if [ -z "${SMTP_USER}" ]; then
  sed -n '/SMTP_USER/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/SMTP_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_USER}}#'"${SMTP_USER}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{SMTP_PASS}}#'"${SMTP_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_PORT}" ]; then
  sed -n '/SMTP_PORT/!p'  -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_PORT}}#'"${SMTP_PORT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_CHANNEL}" ]; then
  sed -n '/SMTP_CHANNEL/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_CHANNEL}}#'"${SMTP_CHANNEL}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${SMTP_PROTOCOL}" ]; then
  sed -n '/SMTP_PROTOCOL/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{SMTP_PROTOCOL}}#'"${SMTP_PROTOCOL}"'#' -i ${APP_HOME}/conf/prod.conf
fi

# impostazioni relative al servizio Attestati (solo per il CNR)

URL_ATTESTATI=${URL_ATTESTATI:-https://attestativ2.rm.cnr.it}
ATTESTATI_ACTIVE=${ATTESTATI_ACTIVE:-false}

if [ -z "${URL_ATTESTATI}" ]; then
  sed -n '/URL_ATTESTATI/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{URL_ATTESTATI}}#'"${URL_ATTESTATI}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${URL_USER}" ]; then
  sed -n '/URL_USER/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{URL_USER}}#'"${URL_USER}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${URL_PASS}" ]; then
  sed -n '/URL_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed "s/{{URL_PASS}}/${URL_PASS}/g" -i ${APP_HOME}/conf/prod.conf
  ATTESTATI_ACTIVE="true"
fi

sed "s/{{ATTESTATI_ACTIVE}}/${ATTESTATI_ACTIVE}/g" -i ${APP_HOME}/conf/prod.conf

# Abilitazione dei job (tipo cron)

if [ -z "${JOBS_ACTIVE}" ]; then
  sed -n '/JOBS_ACTIVE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{JOBS_ACTIVE}}#'"${JOBS_ACTIVE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

# Abilitazione e configurazione dell'integrazione con OIL (solo per il CNR)
if [ -z "${OIL_ENABLED}" ]; then
  sed -n '/OIL_ENABLED/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_ENABLED}}#'"${OIL_ENABLED}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_APP_NAME}" ]; then
  sed -n '/OIL_APP_NAME/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_APP_NAME}}#'"${OIL_APP_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_EMAIL_TO}" ]; then
  sed -n '/OIL_EMAIL_TO/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_EMAIL_TO}}#'"${OIL_EMAIL_TO}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_CATEGORIES}" ]; then
  sed -n '/OIL_CATEGORIES/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_CATEGORIES}}#'"${OIL_CATEGORIES}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${OIL_CATEGORIES_DEFAULT}" ]; then
  sed -n '/OIL_CATEGORIES_DEFAULT/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{OIL_CATEGORIES_DEFAULT}}#'"${OIL_CATEGORIES_DEFAULT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${REPORT_TO}" ]; then
  sed -n '/REPORT_TO/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{REPORT_TO}}#'"${REPORT_TO}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${REPORT_FROM}" ]; then
  sed -n '/REPORT_FROM/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{REPORT_FROM}}#'"${REPORT_FROM}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${REPORT_SUBJECT}" ]; then
  sed -n '/REPORT_SUBJECT/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{REPORT_SUBJECT}}#'"${REPORT_SUBJECT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_BASE}" ]; then
  sed -n '/ANAGRAFICA_BASE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_BASE}}#'"${ANAGRAFICA_BASE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_USER}" ]; then
  sed -n '/ANAGRAFICA_USER/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/ANAGRAFICA_PASS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_USER}}#'"${ANAGRAFICA_USER}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{ANAGRAFICA_PASS}}#'"${ANAGRAFICA_PASS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_PERSON}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_PERSON/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_PERSON}}#'"${ANAGRAFICA_ENDPOINT_PERSON}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_PEOPLE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_PEOPLE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_PEOPLE}}#'"${ANAGRAFICA_ENDPOINT_PEOPLE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_PEOPLEINOFFICE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_PEOPLEINOFFICE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_PEOPLEINOFFICE}}#'"${ANAGRAFICA_ENDPOINT_PEOPLEINOFFICE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_OFFICES}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_OFFICES/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_OFFICES}}#'"${ANAGRAFICA_ENDPOINT_OFFICES}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_OFFICE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_OFFICE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_OFFICE}}#'"${ANAGRAFICA_ENDPOINT_OFFICE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_INSTITUTE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_INSTITUTE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_INSTITUTE}}#'"${ANAGRAFICA_ENDPOINT_INSTITUTE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_CONTRACTS}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_CONTRACTS/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_CONTRACTS}}#'"${ANAGRAFICA_ENDPOINT_CONTRACTS}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_CONTRACTSINOFFICE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_CONTRACTSINOFFICE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_CONTRACTSINOFFICE}}#'"${ANAGRAFICA_ENDPOINT_CONTRACTSINOFFICE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_CONTRACT}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_CONTRACT/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_CONTRACT}}#'"${ANAGRAFICA_ENDPOINT_CONTRACT}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_CONTRACTS_BY_PERSON_ID}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_CONTRACTS_BY_PERSON_ID/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_CONTRACTS_BY_PERSON_ID}}#'"${ANAGRAFICA_ENDPOINT_CONTRACTS_BY_PERSON_ID}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_ROLES}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_ROLES/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_ROLES}}#'"${ANAGRAFICA_ENDPOINT_ROLES}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_BADGESINOFFICE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_BADGESINOFFICE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_BADGESINOFFICE}}#'"${ANAGRAFICA_ENDPOINT_BADGESINOFFICE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${ANAGRAFICA_ENDPOINT_BADGE}" ]; then
  sed -n '/ANAGRAFICA_ENDPOINT_BADGE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{ANAGRAFICA_ENDPOINT_BADGE}}#'"${ANAGRAFICA_ENDPOINT_BADGE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

sed 's#{{SKIP_IP_CHECK}}#'"${SKIP_IP_CHECK}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{FLOWS_ACTIVE}}#'"${FLOWS_ACTIVE}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{EPAS_SHIB_LOGIN}}#'"${EPAS_SHIB_LOGIN}"'#' -i ${APP_HOME}/conf/prod.conf

### Impostazione autenticazione LDAP

LDAP_LOGIN=${LDAP_LOGIN:-false}
LDAP_URL=${LDAP_URL}
LDAP_STARTTLS=${LDAP_STARTTLS:-false}
LDAP_DN_BASE=${LDAP_DN_BASE}
LDAP_TIMEOUT=${LDAP_TIMEOUT:-1000}
LDAP_LOGIN_RETURN=${LDAP_LOGIN_RETURN:-/}
LDAP_EPPN_ATTRIBUTE_NAME=${LDAP_EPPN_ATTRIBUTE_NAME}
LDAP_BIND_USE_ONLY_UID=${LDAP_BIND_USE_ONLY_UID:-false}
LDAP_UNIQUE_IDENTIFIER=${LDAP_UNIQUE_IDENTIFIER:-uid}
LDAP_UNIQUE_IDENTIFIER_POSTFIX=${LDAP_UNIQUE_IDENTIFIER_POSTFIX}
LDAP_BIND_DN=${LDAP_BIND_DN}
LDAP_BIND_CREDENTIALS=${LDAP_BIND_CREDENTIALS}
LDAP_AUTHENTICATE_USER_SEARCH_DN=${LDAP_AUTHENTICATE_USER_SEARCH_DN}
LDAP_PASSWORD_RECOVERY_URL=${LDAP_PASSWORD_RECOVERY_URL}

sed 's#{{LDAP_LOGIN}}#'"${LDAP_LOGIN}"'#' -i ${APP_HOME}/conf/prod.conf

if [ ${LDAP_LOGIN} = "true" ]; then
  sed 's#{{LDAP_URL}}#'"${LDAP_URL}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{LDAP_STARTTLS}}#'"${LDAP_STARTTLS}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{LDAP_TIMEOUT}}#'"${LDAP_TIMEOUT}"'#' -i ${APP_HOME}/conf/prod.conf
  if [ -z "${LDAP_BIND_DN}" ]; then
    sed -n '/LDAP_BIND_DN/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_BIND_DN}}#'"${LDAP_BIND_DN}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  if [ -z "${LDAP_BIND_CREDENTIALS}" ]; then
    sed -n '/LDAP_BIND_CREDENTIALS/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_BIND_CREDENTIALS}}#'"${LDAP_BIND_CREDENTIALS}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  if [ -z "${LDAP_AUTHENTICATE_USER_SEARCH_DN}" ]; then
    sed -n '/LDAP_AUTHENTICATE_USER_SEARCH_DN/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_AUTHENTICATE_USER_SEARCH_DN}}#'"${LDAP_AUTHENTICATE_USER_SEARCH_DN}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  sed 's#{{LDAP_DN_BASE}}#'"${LDAP_DN_BASE}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{LDAP_LOGIN_RETURN}}#'"${LDAP_LOGIN_RETURN}"'#' -i ${APP_HOME}/conf/prod.conf    
  if [ -z "${LDAP_EPPN_ATTRIBUTE_NAME}" ]; then
    sed -n '/LDAP_EPPN_ATTRIBUTE_NAME/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_EPPN_ATTRIBUTE_NAME}}#'"${LDAP_EPPN_ATTRIBUTE_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  sed 's#{{LDAP_BIND_USE_ONLY_UID}}#'"${LDAP_BIND_USE_ONLY_UID}"'#' -i ${APP_HOME}/conf/prod.conf
  sed 's#{{LDAP_UNIQUE_IDENTIFIER}}#'"${LDAP_UNIQUE_IDENTIFIER}"'#' -i ${APP_HOME}/conf/prod.conf   
  if [ -z "${LDAP_UNIQUE_IDENTIFIER_POSTFIX}" ]; then
    sed -n '/LDAP_UNIQUE_IDENTIFIER_POSTFIX/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_UNIQUE_IDENTIFIER_POSTFIX}}#'"${LDAP_UNIQUE_IDENTIFIER_POSTFIX}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  if [ -z "${LDAP_PASSWORD_RECOVERY_URL}" ]; then
    sed -n '/LDAP_PASSWORD_RECOVERY_URL/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{LDAP_PASSWORD_RECOVERY_URL}}#'"${LDAP_PASSWORD_RECOVERY_URL}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
else
  sed -n '/LDAP_URL/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_STARTTLS/!p' -i ${APP_HOME}/conf/prod.conf  
  sed -n '/LDAP_TIMEOUT/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_DN_BASE/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_LOGIN_RETURN/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_EPPN_ATTRIBUTE_NAME/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_BIND_USE_ONLY_UID/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_UNIQUE_IDENTIFIER/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_UNIQUE_IDENTIFIER_POSTFIX/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_BIND_DN/!p' -i ${APP_HOME}/conf/prod.conf 
  sed -n '/LDAP_BIND_CREDENTIALS/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/LDAP_AUTHENTICATE_USER_SEARCH_DN/!p' -i ${APP_HOME}/conf/prod.conf
fi

### Fine impostazione autenticazione LDAP

OAUTH_LOGIN=${OAUTH_LOGIN:-false}
KEYCLOAK_CONFIG_URI=${KEYCLOAK_CONFIG_URI}
KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-epas}
KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
KEYCLOAK_JWT_FIELD=${KEYCLOAK_JWT_FIELD}
JWT_KEY=${JWT_KEY}

sed 's#{{OAUTH_LOGIN}}#'"${OAUTH_LOGIN}"'#' -i ${APP_HOME}/conf/prod.conf

if [ ${OAUTH_LOGIN} = "true" ]; then
  if [ -z "${KEYCLOAK_CONFIG_URI}" ]; then
    sed -n '/KEYCLOAK_CONFIG_URI/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{KEYCLOAK_CONFIG_URI}}#'"${KEYCLOAK_CONFIG_URI}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  sed 's#{{KEYCLOAK_CLIENT_ID}}#'"${KEYCLOAK_CLIENT_ID}"'#' -i ${APP_HOME}/conf/prod.conf
  if [ -z "${KEYCLOAK_CLIENT_SECRET}" ]; then
    sed -n '/KEYCLOAK_CLIENT_SECRET/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{KEYCLOAK_CLIENT_SECRET}}#'"${KEYCLOAK_CLIENT_SECRET}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
  if [ -z "${KEYCLOAK_JWT_FIELD}" ]; then
    sed -n '/KEYCLOAK_JWT_FIELD/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{KEYCLOAK_JWT_FIELD}}#'"${KEYCLOAK_JWT_FIELD}"'#' -i ${APP_HOME}/conf/prod.conf
  fi 
  if [ -z "${JWT_KEY}" ]; then
    sed -n '/JWT_KEY/!p' -i ${APP_HOME}/conf/prod.conf
  else
    sed 's#{{JWT_KEY}}#'"${JWT_KEY}"'#' -i ${APP_HOME}/conf/prod.conf
  fi
else
  sed -n '/KEYCLOAK_CONFIG_URI/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/KEYCLOAK_CLIENT_ID/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/KEYCLOAK_CLIENT_SECRET/!p' -i ${APP_HOME}/conf/prod.conf
  sed -n '/JWT_KEY/!p' -i ${APP_HOME}/conf/prod.conf
fi

### Impostazione Login OAuth


### Fine impostazione Login OAuth

### Impostazione dati dell'ente/azienda che utilzza ePAS

if [ -z "${COMPANY_CODE}" ]; then
  sed -n '/COMPANY_CODE/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{COMPANY_CODE}}#'"${COMPANY_CODE}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${COMPANY_NAME}" ]; then
  sed -n '/COMPANY_NAME/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{COMPANY_NAME}}#'"${COMPANY_NAME}"'#' -i ${APP_HOME}/conf/prod.conf
fi

if [ -z "${COMPANY_URL}" ]; then
  sed -n '/COMPANY_URL/!p' -i ${APP_HOME}/conf/prod.conf
else
  sed 's#{{COMPANY_URL}}#'"${COMPANY_URL}"'#' -i ${APP_HOME}/conf/prod.conf
fi

### Fine impostazione dati dell'ente/azienda che utilzza ePAS

### Configurazione parametri telework-stampings

TELEWORK_ACTIVE=${TELEWORK_ACTIVE:-false}
TELEWORK_BASEURL=${TELEWORK_BASEURL:-http://telework-stampings:8080}
TELEWORK_USER=${TELEWORK_USER:-app.epas}
TELEWORK_PASS=${TELEWORK_PASS:-epas.app}

sed 's#{{TELEWORK_ACTIVE}}#'"${TELEWORK_ACTIVE}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{TELEWORK_BASEURL}}#'"${TELEWORK_BASEURL}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{TELEWORK_USER}}#'"${TELEWORK_USER}"'#' -i ${APP_HOME}/conf/prod.conf
sed 's#{{TELEWORK_PASS}}#'"${TELEWORK_PASS}"'#' -i ${APP_HOME}/conf/prod.conf

### Fine configurazione parametri telework-stampings

### Configurazione dell'attivazione del controllo del Green Pass

GREENPASS_ACTIVE=${GREENPASS_ACTIVE:-false}

sed 's#{{GREENPASS_ACTIVE}}#'"${GREENPASS_ACTIVE}"'#' -i ${APP_HOME}/conf/prod.conf

### Fine configurazione parametri relativi al Green PAss

appRun () {
  if [ "$EVOLUTIONS_ENABLED" = "true" ]; then
    echo "Applico eventuali evoluzioni al database..."
    play evolutions:apply --%prod
    echo ".... evoluzioni terminate"
  else
    echo "Evoluzioni disabilitate dalla configurazione: EVOLUTIONS_ENABLED=$EVOLUTIONS_ENABLED"; 
  fi
  
  echo "Avvio ${APP}..."
  play run --%prod -Dprecompiled=true -Duser.country=IT -Duser.language=it
  echo "....${APP} avviato"
}

appPlay() {
  if [ -z ${1} ]; then
    echo "Per favore specifica almeno un'azione play da eseguire, es: evolutions, evolutions:apply, etc...."
    return 1
  fi
  play $@ --%prod
}

appHelp () {
  echo "Available options:"
  echo " app:run          - Start ePAS server (default)"
  echo " app:play <task>    - Execute a play task."
  echo " app:help           - Displays the help"
  echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
  app:run)
    appRun
    ;;
  app:play)
    shift 1
    appPlay $@
    ;;
  app:help)
    appHelp
    ;;
  *)
    if [ -x $1 ]; then
      $1
    else
      prog=$(which $1)
      if [ -n "${prog}" ] ; then
        shift 1
        $prog $@
      else
        appHelp
      fi
    fi
    ;;
esac

exit 0
